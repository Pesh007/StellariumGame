import customtkinter as ctk
from pandas import read_excel
from random import randint
from namirane import centrirane  # –¢–≤–æ—è—Ç –º–æ–¥—É–ª

def thirdPage(rounds1: int):
    # –ó–∞—Ä–µ–∂–¥–∞–º–µ –∑–≤–µ–∑–¥–∏—Ç–µ –æ—Ç Excel
    stars = read_excel("C:/Users/user/Desktop/python1/StellariumIgra/nai-iarki-zvezdi_full.xlsx")

    # –ì–ª–æ–±–∞–ª–Ω–∏ –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∏
    global rounds, right_answers, star, answered
    rounds = rounds1
    right_answers = 0
    answered = False

    # –ò–∑–±–æ—Ä –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª–Ω–∞ –∑–≤–µ–∑–¥–∞
    def pick_new_star():
        global star, answered
        star = stars.iloc[randint(0, len(stars) - 1)]
        answered = False
        try:
            ra = float(star[stars.columns[4]])
            dec = float(star[stars.columns[5]])
            centrirane(ra, dec)
        except Exception as e:
            print(f"–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ü–µ–Ω—Ç—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –∑–≤–µ–∑–¥–∞: {e}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—ä–≤–µ–¥–µ–Ω–∏—è –æ—Ç–≥–æ–≤–æ—Ä
    def check():
        global right_answers, answered

        if answered:
            return  # –ù—è–º–∞ –ø–æ–≤—Ç–æ—Ä–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞

        user_input = entry.get().strip().lower()
        correct_name = str(star[stars.columns[0]]).strip().lower()

        if user_input == correct_name:
            label.configure(text="‚úÖ –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è! –ü–æ–∑–Ω–∞—Ö—Ç–µ –∑–≤–µ–∑–¥–∞—Ç–∞.")
            right_answers += 1
        else:
            label.configure(text=f"‚ùå –ì—Ä–µ—à–Ω–æ! –ü—Ä–∞–≤–∏–ª–Ω–æ—Ç–æ –∏–º–µ –µ: {star[stars.columns[0]]}")

        answered = True
        button_check.configure(state=ctk.DISABLED)  # –î–µ–∞–∫—Ç–∏–≤–∏—Ä–∞–Ω–µ –Ω–∞ –±—É—Ç–æ–Ω–∞

    # –°–ª–µ–¥–≤–∞—â —Ä—É–Ω–¥ –∏–ª–∏ –∫—Ä–∞–π –Ω–∞ –∏–≥—Ä–∞—Ç–∞
    def next():
        global rounds, answered
        rounds -= 1

        if rounds <= 0:
            label.configure(
                text=f"üéâ –ò–≥—Ä–∞—Ç–∞ –ø—Ä–∏–∫–ª—é—á–∏!\n–ü–æ–∑–Ω–∞—Ç–∏ –∑–≤–µ–∑–¥–∏: {right_answers} –æ—Ç {rounds1}"
            )
            entry.configure(state=ctk.DISABLED)
            button_check.configure(state=ctk.DISABLED)
            button_next.configure(state=ctk.DISABLED)
        else:
            pick_new_star()
            entry.delete(0, ctk.END)
            label.configure(text=f"–û—Å—Ç–∞–≤–∞—â–∏ —Ä—É–Ω–¥–æ–≤–µ: {rounds}")
            button_check.configure(state=ctk.NORMAL)  # –ê–∫—Ç–∏–≤–∏—Ä–∞ –±—É—Ç–æ–Ω–∞ –æ—Ç–Ω–æ–≤–æ

    # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–∑–æ—Ä–µ—Ü–∞
    app = ctk.CTk()
    app.title("–ò–≥—Ä–∞ —Å—ä—Å –∑–≤–µ–∑–¥–∏ üåü")
    app.geometry("400x300")
    app.grid_columnconfigure(0, weight=1)

    # –¢–µ–∫—Å—Ç–æ–≤–æ –ø–æ–ª–µ –∑–∞ –≤—ä–≤–µ–∂–¥–∞–Ω–µ
    entry = ctk.CTkEntry(app, placeholder_text="–í—ä–≤–µ–¥–∏ –∏–º–µ—Ç–æ –Ω–∞ –∑–≤–µ–∑–¥–∞—Ç–∞...")
    entry.pack(pady=20, padx=40)

    # –ë—É—Ç–æ–Ω "–ü—Ä–æ–≤–µ—Ä–∏"
    button_check = ctk.CTkButton(app, text="–ü—Ä–æ–≤–µ—Ä–∏", command=check)
    button_check.pack(pady=10)

    # –ë—É—Ç–æ–Ω "–°–ª–µ–¥–≤–∞—â–∞"
    button_next = ctk.CTkButton(app, text="–°–ª–µ–¥–≤–∞—â–∞", command=next)
    button_next.pack(pady=10)

    # –ï—Ç–∏–∫–µ—Ç –∑–∞ —Å—ä–æ–±—â–µ–Ω–∏—è
    label = ctk.CTkLabel(app, text=f"–û—Å—Ç–∞–≤–∞—â–∏ —Ä—É–Ω–¥–æ–≤–µ: {rounds}")
    label.pack(pady=10)

    # –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ —Å –ø—ä—Ä–≤–∞ –∑–≤–µ–∑–¥–∞
    pick_new_star()

    app.mainloop()
